// Generated by view binder compiler. Do not edit!
package com.mahmoudrefaie.sekkawahda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mahmoudrefaie.sekkawahda.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RelativeLayout createPost;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView dateTimeTextView;

  @NonNull
  public final RelativeLayout extendedPost;

  @NonNull
  public final ConstraintLayout fragmentContainer;

  @NonNull
  public final Spinner fromCity;

  @NonNull
  public final TextView journeyFromTextView;

  @NonNull
  public final View line1;

  @NonNull
  public final View line2;

  @NonNull
  public final EditText placeToMeet;

  @NonNull
  public final CardView postBtnCardview;

  @NonNull
  public final RecyclerView postsRecycler;

  @NonNull
  public final CircleImageView profPicUser;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final Button submitPost;

  @NonNull
  public final TextView time;

  @NonNull
  public final Spinner toCity;

  @NonNull
  public final TextView toTextView;

  @NonNull
  public final ProgressBar tripsProgressBar;

  @NonNull
  public final TextView username;

  @NonNull
  public final TextView writePost;

  private FragmentHomeBinding(@NonNull ScrollView rootView, @NonNull RelativeLayout createPost,
      @NonNull TextView date, @NonNull TextView dateTimeTextView,
      @NonNull RelativeLayout extendedPost, @NonNull ConstraintLayout fragmentContainer,
      @NonNull Spinner fromCity, @NonNull TextView journeyFromTextView, @NonNull View line1,
      @NonNull View line2, @NonNull EditText placeToMeet, @NonNull CardView postBtnCardview,
      @NonNull RecyclerView postsRecycler, @NonNull CircleImageView profPicUser,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull Button submitPost, @NonNull TextView time,
      @NonNull Spinner toCity, @NonNull TextView toTextView, @NonNull ProgressBar tripsProgressBar,
      @NonNull TextView username, @NonNull TextView writePost) {
    this.rootView = rootView;
    this.createPost = createPost;
    this.date = date;
    this.dateTimeTextView = dateTimeTextView;
    this.extendedPost = extendedPost;
    this.fragmentContainer = fragmentContainer;
    this.fromCity = fromCity;
    this.journeyFromTextView = journeyFromTextView;
    this.line1 = line1;
    this.line2 = line2;
    this.placeToMeet = placeToMeet;
    this.postBtnCardview = postBtnCardview;
    this.postsRecycler = postsRecycler;
    this.profPicUser = profPicUser;
    this.refreshLayout = refreshLayout;
    this.submitPost = submitPost;
    this.time = time;
    this.toCity = toCity;
    this.toTextView = toTextView;
    this.tripsProgressBar = tripsProgressBar;
    this.username = username;
    this.writePost = writePost;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.create_post;
      RelativeLayout createPost = ViewBindings.findChildViewById(rootView, id);
      if (createPost == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.date_time_TextView;
      TextView dateTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeTextView == null) {
        break missingId;
      }

      id = R.id.extended_post;
      RelativeLayout extendedPost = ViewBindings.findChildViewById(rootView, id);
      if (extendedPost == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      ConstraintLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.from_city;
      Spinner fromCity = ViewBindings.findChildViewById(rootView, id);
      if (fromCity == null) {
        break missingId;
      }

      id = R.id.journey_from_TextView;
      TextView journeyFromTextView = ViewBindings.findChildViewById(rootView, id);
      if (journeyFromTextView == null) {
        break missingId;
      }

      id = R.id.line1;
      View line1 = ViewBindings.findChildViewById(rootView, id);
      if (line1 == null) {
        break missingId;
      }

      id = R.id.line2;
      View line2 = ViewBindings.findChildViewById(rootView, id);
      if (line2 == null) {
        break missingId;
      }

      id = R.id.place_to_meet;
      EditText placeToMeet = ViewBindings.findChildViewById(rootView, id);
      if (placeToMeet == null) {
        break missingId;
      }

      id = R.id.postBtn_cardview;
      CardView postBtnCardview = ViewBindings.findChildViewById(rootView, id);
      if (postBtnCardview == null) {
        break missingId;
      }

      id = R.id.posts_recycler;
      RecyclerView postsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (postsRecycler == null) {
        break missingId;
      }

      id = R.id.profPicUser;
      CircleImageView profPicUser = ViewBindings.findChildViewById(rootView, id);
      if (profPicUser == null) {
        break missingId;
      }

      id = R.id.refreshLayout;
      SwipeRefreshLayout refreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayout == null) {
        break missingId;
      }

      id = R.id.submit_post;
      Button submitPost = ViewBindings.findChildViewById(rootView, id);
      if (submitPost == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.to_city;
      Spinner toCity = ViewBindings.findChildViewById(rootView, id);
      if (toCity == null) {
        break missingId;
      }

      id = R.id.to_TextView;
      TextView toTextView = ViewBindings.findChildViewById(rootView, id);
      if (toTextView == null) {
        break missingId;
      }

      id = R.id.trips_progress_bar;
      ProgressBar tripsProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (tripsProgressBar == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.writePost;
      TextView writePost = ViewBindings.findChildViewById(rootView, id);
      if (writePost == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, createPost, date, dateTimeTextView,
          extendedPost, fragmentContainer, fromCity, journeyFromTextView, line1, line2, placeToMeet,
          postBtnCardview, postsRecycler, profPicUser, refreshLayout, submitPost, time, toCity,
          toTextView, tripsProgressBar, username, writePost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
